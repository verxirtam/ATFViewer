!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ATFViewerMain	ATFViewerMain.h	/^	ATFViewerMain():$/;"	f	class:ATFViewerMain
ATFViewerMain	ATFViewerMain.h	/^class ATFViewerMain$/;"	c
ATFViewerMain_H	ATFViewerMain.h	22;"	d
CXXFLAGS	makefile	/^CXXFLAGS := -g -O0 -Wall -lsqlite3 -L\/usr\/lib\/x86_64-linux-gnu -lglut -lGLU -lGL -I\/usr\/include$/;"	m
DBAccessor	DBAccessor.h	/^	DBAccessor(const std::string& dbfilename):dbFileName(dbfilename),db(NULL),stmt(NULL)$/;"	f	class:DBAccessor
DBAccessor	DBAccessor.h	/^class DBAccessor$/;"	c
DBAccessor_H_	DBAccessor.h	20;"	d
DEPS	makefile	/^DEPS := $(SRCS:.cpp=.d)$/;"	m
FIXES_H_	Fixes.h	20;"	d
Fixes	Fixes.h	/^	Fixes()$/;"	f	class:Fixes
Fixes	Fixes.h	/^class Fixes$/;"	c
LongLat	Sectors.h	/^struct LongLat$/;"	s
MAP_H_	Map.h	21;"	d
Map	Map.h	/^	Map():$/;"	f	class:Map
Map	Map.h	/^class Map$/;"	c
MapVertex	Map.h	/^struct MapVertex$/;"	s
MapVertexIndex	Map.h	/^struct MapVertexIndex$/;"	s
OBJS	makefile	/^OBJS := $(SRCS:.cpp=.o)$/;"	m
PI	ATFViewerMain.h	/^	const double PI;$/;"	m	class:ATFViewerMain
PathPoint	ATFViewerMain.h	/^	PathPoint(double lo,double la, int a, long long t)$/;"	f	struct:PathPoint
PathPoint	ATFViewerMain.h	/^struct PathPoint$/;"	s
SRCS	makefile	/^SRCS := $(shell ls *.cpp)$/;"	m
Sector	Sectors.h	/^struct Sector$/;"	s
Sectors	Sectors.h	/^	Sectors():sector(),longLat()$/;"	f	class:Sectors
Sectors	Sectors.h	/^class Sectors$/;"	c
Sectors_H	Sectors.h	20;"	d
SubSector	Sectors.h	/^struct SubSector$/;"	s
TARGET	makefile	/^TARGET := $(shell basename `dirname \\`pwd\\``)$/;"	m
UTIL_H_	Util.h	19;"	d
Util	Util.h	/^class Util$/;"	c
_display	ATFViewerMain.h	/^	static void _display(void)$/;"	f	class:ATFViewerMain
_idle	ATFViewerMain.h	/^	static void _idle(void)$/;"	f	class:ATFViewerMain
_keyboard	ATFViewerMain.h	/^	static void _keyboard(unsigned char key, int x, int y)$/;"	f	class:ATFViewerMain
_resize	ATFViewerMain.h	/^	static void _resize(int w, int h)$/;"	f	class:ATFViewerMain
altitude	ATFViewerMain.h	/^	int altitude;$/;"	m	struct:PathPoint
begin	DBAccessor.h	/^	void begin()$/;"	f	class:DBAccessor
bindDouble	DBAccessor.h	/^	void bindDouble(int i, double d)$/;"	f	class:DBAccessor
bindInt	DBAccessor.h	/^	void bindInt(int i, int d)$/;"	f	class:DBAccessor
bindLong	DBAccessor.h	/^	void bindLong(int i, long long d)$/;"	f	class:DBAccessor
bindString	DBAccessor.h	/^	void bindString(int i, const std::string& s)$/;"	f	class:DBAccessor
camera_phi	ATFViewerMain.h	/^	GLdouble camera_phi;$/;"	m	class:ATFViewerMain
camera_r	ATFViewerMain.h	/^	GLdouble camera_r;$/;"	m	class:ATFViewerMain
camera_target	ATFViewerMain.h	/^	GLdouble camera_target[3];$/;"	m	class:ATFViewerMain
camera_theta	ATFViewerMain.h	/^	GLdouble camera_theta;$/;"	m	class:ATFViewerMain
caption	Sectors.h	/^	std::string caption;$/;"	m	struct:Sector
centerOffsetLat	Map.h	/^	GLdouble centerOffsetLat;$/;"	m	class:Map
centerOffsetLong	Map.h	/^	GLdouble centerOffsetLong;$/;"	m	class:Map
commit	DBAccessor.h	/^	void commit()$/;"	f	class:DBAccessor
db	DBAccessor.h	/^	sqlite3 *db;$/;"	m	class:DBAccessor
dbFileName	DBAccessor.h	/^	std::string dbFileName;$/;"	m	class:DBAccessor
display	ATFViewerMain.cpp	/^void ATFViewerMain::display(void)$/;"	f	class:ATFViewerMain
display	Fixes.h	/^	void display()$/;"	f	class:Fixes
display	Map.cpp	/^void Map::display(void)$/;"	f	class:Map
display	Sectors.cpp	/^void Sectors::display(void)$/;"	f	class:Sectors
displaySubSector	Sectors.cpp	/^void Sectors::displaySubSector(SubSector& ss)$/;"	f	class:Sectors
drawPath	ATFViewerMain.cpp	/^void ATFViewerMain::drawPath(PathPoint& p)$/;"	f	class:ATFViewerMain
execMainLoop	ATFViewerMain.h	/^	void execMainLoop(void)$/;"	f	class:ATFViewerMain
execQuery	DBAccessor.h	/^	std::string execQuery(const std::string& query)$/;"	f	class:DBAccessor
fixes	ATFViewerMain.h	/^	Fixes fixes;$/;"	m	class:ATFViewerMain
getCenterOffsetLat	Map.h	/^	GLdouble getCenterOffsetLat(void)$/;"	f	class:Map
getCenterOffsetLong	Map.h	/^	GLdouble getCenterOffsetLong(void)$/;"	f	class:Map
getColumnDouble	DBAccessor.h	/^	double getColumnDouble(int i)$/;"	f	class:DBAccessor
getColumnInt	DBAccessor.h	/^	int getColumnInt(int i)$/;"	f	class:DBAccessor
getColumnLongLong	DBAccessor.h	/^	long long getColumnLongLong(int i)$/;"	f	class:DBAccessor
getColumnString	DBAccessor.h	/^	std::string getColumnString(int i)$/;"	f	class:DBAccessor
getInsideLongLat	Sectors.cpp	/^LongLat Sectors::getInsideLongLat(LongLat& xi, LongLat& xj, LongLat& xk, double distance)$/;"	f	class:Sectors
getInstance	ATFViewerMain.h	/^	inline static ATFViewerMain& getInstance()$/;"	f	class:ATFViewerMain
getLatitudeFromDMS	Util.h	/^	static double getLatitudeFromDMS(std::string lat_dms)$/;"	f	class:Util
getLongitudeFromDMS	Util.h	/^	static double getLongitudeFromDMS(std::string long_dms)$/;"	f	class:Util
getNowPoint	ATFViewerMain.cpp	/^PathPoint ATFViewerMain::getNowPoint(PathPoint& from, PathPoint& to, double time)$/;"	f	class:ATFViewerMain
getScale	Map.h	/^	GLdouble getScale(void)$/;"	f	class:Map
getSectors	Sectors.cpp	/^void Sectors::getSectors(DBAccessor& dba)$/;"	f	class:Sectors
getSettings	Map.cpp	/^void Map::getSettings(DBAccessor& dba,std::string& map_id, std::string& texture_file_name)$/;"	f	class:Map
getSubSectorVertex	Sectors.cpp	/^void Sectors::getSubSectorVertex(DBAccessor& dba, std::string& sector_name, int subsector_index)$/;"	f	class:Sectors
getSubSectors	Sectors.cpp	/^void Sectors::getSubSectors(DBAccessor& dba, std::string& sector_name)$/;"	f	class:Sectors
getVertex	Map.cpp	/^void Map::getVertex(DBAccessor& dba,std::string& map_id)$/;"	f	class:Map
getVertexIndex	Map.cpp	/^void Map::getVertexIndex(DBAccessor& dba,std::string& map_id)$/;"	f	class:Map
idle	ATFViewerMain.h	/^	void idle(void)$/;"	f	class:ATFViewerMain
includesMaximumAltitude	Sectors.h	/^	bool includesMaximumAltitude;$/;"	m	struct:SubSector
includesMinimumAltitude	Sectors.h	/^	bool includesMinimumAltitude;$/;"	m	struct:SubSector
init	ATFViewerMain.h	/^	void init(void)$/;"	f	class:ATFViewerMain
init	Fixes.cpp	/^void Fixes::init(DBAccessor& dba)$/;"	f	class:Fixes
init	Map.cpp	/^void Map::init(DBAccessor& dba)$/;"	f	class:Map
init	Sectors.h	/^	void init(DBAccessor& dba)$/;"	f	class:Sectors
initPathPoint	ATFViewerMain.cpp	/^void ATFViewerMain::initPathPoint(DBAccessor& dba)$/;"	f	class:ATFViewerMain
initScene	ATFViewerMain.cpp	/^void ATFViewerMain::initScene(void)$/;"	f	class:ATFViewerMain
initTexture	Map.cpp	/^void Map::initTexture(std::string& texture_file_name)$/;"	f	class:Map
insideLongLatIndex	Sectors.h	/^	std::vector<int> insideLongLatIndex;$/;"	m	struct:SubSector
keyboard	ATFViewerMain.cpp	/^void ATFViewerMain::keyboard(unsigned char key, int x, int y)$/;"	f	class:ATFViewerMain
latitude	ATFViewerMain.h	/^	double latitude;$/;"	m	struct:PathPoint
latitude	Fixes.h	/^	std::vector<double> latitude;$/;"	m	class:Fixes
latitude	Map.h	/^	double latitude;$/;"	m	struct:MapVertex
latitude	Sectors.h	/^	double latitude;$/;"	m	struct:LongLat
longLat	Sectors.h	/^	std::vector<LongLat> longLat;$/;"	m	class:Sectors
longLatIndex	Sectors.h	/^	std::vector<int> longLatIndex;$/;"	m	struct:SubSector
longitude	ATFViewerMain.h	/^	double longitude;$/;"	m	struct:PathPoint
longitude	Fixes.h	/^	std::vector<double> longitude;$/;"	m	class:Fixes
longitude	Map.h	/^	double longitude;$/;"	m	struct:MapVertex
longitude	Sectors.h	/^	double longitude;$/;"	m	struct:LongLat
main	ATFViewer.cpp	/^int main(int argc, char const* argv[])$/;"	f
map	ATFViewerMain.h	/^	Map map;$/;"	m	class:ATFViewerMain
mapVertex	Map.h	/^	std::vector<MapVertex> mapVertex;$/;"	m	class:Map
mapVertexIndex	Map.h	/^	std::vector<std::vector<MapVertexIndex> > mapVertexIndex;$/;"	m	class:Map
maximumAltitude	Sectors.h	/^	int maximumAltitude;$/;"	m	struct:SubSector
minimumAltitude	Sectors.h	/^	int minimumAltitude;$/;"	m	struct:SubSector
name	Fixes.h	/^	std::vector<std::string> name;$/;"	m	class:Fixes
now	ATFViewerMain.h	/^	time_t now;$/;"	m	class:ATFViewerMain
now_index	ATFViewerMain.h	/^	std::vector<int> now_index;$/;"	m	class:ATFViewerMain
past_time_index	ATFViewerMain.h	/^	std::vector<int> past_time_index;$/;"	m	class:ATFViewerMain
paths	ATFViewerMain.h	/^	std::vector<std::vector<PathPoint> > paths;$/;"	m	class:ATFViewerMain
paths_first_index	ATFViewerMain.h	/^	std::vector<int> paths_first_index;$/;"	m	class:ATFViewerMain
resetStmt	DBAccessor.h	/^	void resetStmt()$/;"	f	class:DBAccessor
resize	ATFViewerMain.cpp	/^void ATFViewerMain::resize(int w, int h)$/;"	f	class:ATFViewerMain
scale	Map.h	/^	GLdouble scale;$/;"	m	class:Map
sector	Sectors.h	/^	std::vector<Sector> sector;$/;"	m	class:Sectors
sectorName	Sectors.h	/^	std::string sectorName;$/;"	m	struct:Sector
sectors	ATFViewerMain.h	/^	Sectors sectors;$/;"	m	class:ATFViewerMain
setCenterOffsetLat	Map.h	/^	void setCenterOffsetLat(GLdouble c_lat)$/;"	f	class:Map
setCenterOffsetLong	Map.h	/^	void setCenterOffsetLong(GLdouble c_long)$/;"	f	class:Map
setQuery	DBAccessor.h	/^	void setQuery(const std::string& sql)$/;"	f	class:DBAccessor
setScale	Map.h	/^	void setScale(GLdouble s)$/;"	f	class:Map
step	DBAccessor.h	/^	void step()$/;"	f	class:DBAccessor
step_select	DBAccessor.h	/^	int step_select()$/;"	f	class:DBAccessor
stmt	DBAccessor.h	/^	sqlite3_stmt* stmt;$/;"	m	class:DBAccessor
subSector	Sectors.h	/^	std::vector<SubSector> subSector;$/;"	m	struct:Sector
subSectorCount	Sectors.h	/^	int subSectorCount;$/;"	m	struct:Sector
textureHeight	Map.h	/^	int textureHeight;$/;"	m	class:Map
textureWidth	Map.h	/^	int textureWidth;$/;"	m	class:Map
time	ATFViewerMain.h	/^	time_t time;$/;"	m	struct:PathPoint
timeMax	ATFViewerMain.h	/^	const time_t timeMax;$/;"	m	class:ATFViewerMain
timeMin	ATFViewerMain.h	/^	const time_t timeMin;$/;"	m	class:ATFViewerMain
u	Map.h	/^	double u;$/;"	m	struct:MapVertex
unitProvidingService	Sectors.h	/^	std::string unitProvidingService;$/;"	m	struct:Sector
v	Map.h	/^	double v;$/;"	m	struct:MapVertex
vertexIndex	Map.h	/^	int vertexIndex;$/;"	m	struct:MapVertexIndex
~DBAccessor	DBAccessor.h	/^	~DBAccessor()$/;"	f	class:DBAccessor
