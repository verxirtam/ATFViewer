!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ATFViewerMain	ATFViewerMain.h	/^	ATFViewerMain():$/;"	f	class:ATFViewerMain
ATFViewerMain	ATFViewerMain.h	/^class ATFViewerMain$/;"	c
ATFViewerMain_H	ATFViewerMain.h	22;"	d
Axis	Joystick.h	/^	std::vector<int> Axis;$/;"	m	class:Joystick
AxisCount	Joystick.h	/^	int AxisCount;$/;"	m	class:Joystick
Axis_LeftStick_LeftRight	Joystick.h	/^	Axis_LeftStick_LeftRight = 0,$/;"	e	enum:KeyCode_F310
Axis_LeftStick_UpDown	Joystick.h	/^	Axis_LeftStick_UpDown = 1,$/;"	e	enum:KeyCode_F310
Axis_LeftTrigger_OffOn	Joystick.h	/^	Axis_LeftTrigger_OffOn = 2,$/;"	e	enum:KeyCode_F310
Axis_RightStick_LeftRight	Joystick.h	/^	Axis_RightStick_LeftRight = 3,$/;"	e	enum:KeyCode_F310
Axis_RightStick_UpDown	Joystick.h	/^	Axis_RightStick_UpDown = 4,$/;"	e	enum:KeyCode_F310
Axis_RightTrigger_OffOn	Joystick.h	/^	Axis_RightTrigger_OffOn = 5,$/;"	e	enum:KeyCode_F310
BitmapString	BitmapString.h	/^class BitmapString$/;"	c
BitmapString_H	BitmapString.h	20;"	d
Button	Joystick.h	/^	std::vector<bool> Button;$/;"	m	class:Joystick
ButtonCount	Joystick.h	/^	int ButtonCount;$/;"	m	class:Joystick
Button_A	Joystick.h	/^	Button_A = 0,$/;"	e	enum:KeyCode_F310
Button_B	Joystick.h	/^	Button_B = 1,$/;"	e	enum:KeyCode_F310
Button_BACK	Joystick.h	/^	Button_BACK = 6,$/;"	e	enum:KeyCode_F310
Button_LB	Joystick.h	/^	Button_LB = 4,$/;"	e	enum:KeyCode_F310
Button_LeftStick_Push	Joystick.h	/^	Button_LeftStick_Push = 9,$/;"	e	enum:KeyCode_F310
Button_Logicool	Joystick.h	/^	Button_Logicool = 8,$/;"	e	enum:KeyCode_F310
Button_RB	Joystick.h	/^	Button_RB = 5,$/;"	e	enum:KeyCode_F310
Button_RightStick_Push	Joystick.h	/^	Button_RightStick_Push = 10$/;"	e	enum:KeyCode_F310
Button_START	Joystick.h	/^	Button_START = 7,$/;"	e	enum:KeyCode_F310
Button_X	Joystick.h	/^	Button_X = 2,$/;"	e	enum:KeyCode_F310
Button_Y	Joystick.h	/^	Button_Y = 3,$/;"	e	enum:KeyCode_F310
COMMON_FLAGS	makefile	/^COMMON_FLAGS := -g -O0$/;"	m
CUDA_SRCS	makefile	/^CUDA_SRCS := $(shell ls *.cu)$/;"	m
CXXFLAGS	makefile	/^CXXFLAGS := -Wall -lsqlite3 -L\/usr\/lib\/x86_64-linux-gnu -lglut -lGLU -lGL -I\/usr\/include$/;"	m
CountCrossing	CountCrossing.h	/^	CountCrossing():$/;"	f	class:CountCrossing
CountCrossing	CountCrossing.h	/^class CountCrossing$/;"	c
CountCrossing_H_	CountCrossing.h	21;"	d
CountCrossing_host_H_	CountCrossing_cuda.h	21;"	d
DBAccessor	DBAccessor.h	/^	DBAccessor(const std::string& dbfilename):dbFileName(dbfilename),db(NULL),stmt(NULL)$/;"	f	class:DBAccessor
DBAccessor	DBAccessor.h	/^class DBAccessor$/;"	c
DBAccessor_H_	DBAccessor.h	20;"	d
DEPS	makefile	/^DEPS := $(SRCS:.cpp=.d) $(CUDA_SRCS:.cu=.d)$/;"	m
Device	Joystick.h	/^	const char* Device;$/;"	m	class:Joystick
FIXES_H_	Fixes.h	20;"	d
File	Joystick.h	/^	int File;$/;"	m	class:Joystick
Fixes	Fixes.h	/^	Fixes()$/;"	f	class:Fixes
Fixes	Fixes.h	/^class Fixes$/;"	c
GCS_H_	GCS.h	21;"	d
Joystick	Joystick.h	/^	Joystick():$/;"	f	class:Joystick
Joystick	Joystick.h	/^class Joystick$/;"	c
Joystick_H_	Joystick.h	20;"	d
KeyCode_F310	Joystick.h	/^enum KeyCode_F310$/;"	g
LongLat	GCS.h	/^struct LongLat$/;"	s
MAP_H_	Map.h	21;"	d
Map	Map.h	/^	Map(const std::string& map_id):$/;"	f	class:Map
Map	Map.h	/^class Map$/;"	c
MapTransform	MapTransform.h	/^	MapTransform():$/;"	f	class:MapTransform
MapTransform	MapTransform.h	/^class MapTransform$/;"	c
MapTransform_H	MapTransform.h	19;"	d
MapVertex	Map.h	/^struct MapVertex$/;"	s
MapVertexIndex	Map.h	/^struct MapVertexIndex$/;"	s
NVCC	makefile	/^NVCC := nvcc$/;"	m
NVCC_FLAGS	makefile	/^NVCC_FLAGS :=  -Xcompiler -Wall -arch=compute_13 -code=sm_13,compute_13$/;"	m
NVCC_LINKS	makefile	/^NVCC_LINKS := -lcuda -lcudart$/;"	m
OBJS	makefile	/^OBJS := $(SRCS:.cpp=.o) $(CUDA_SRCS:.cu=.o)$/;"	m
OBJSTARGET	makefile	/^OBJSTARGET := $(filter-out $(TESTTARGET).o, $(OBJS))$/;"	m
OBJSTEST	makefile	/^OBJSTEST := $(filter-out $(TARGET).o, $(OBJS))$/;"	m
PI	ATFViewerMain.h	/^	const double PI;$/;"	m	class:ATFViewerMain
Path	Path.h	/^struct Path$/;"	s
PathPoint	Path.h	/^	PathPoint(double lo,double la, int a, long long t, const std::string ar)$/;"	f	struct:PathPoint
PathPoint	Path.h	/^struct PathPoint$/;"	s
Path_H	Path.h	19;"	d
Paths	Paths.h	/^	Paths():drawTimeWidth(600)$/;"	f	class:Paths
Paths	Paths.h	/^class Paths$/;"	c
Paths_H	Paths.h	20;"	d
SRCS	makefile	/^SRCS := $(shell ls *.cpp)$/;"	m
Sector	Sectors.h	/^struct Sector$/;"	s
Sectors	Sectors.h	/^	Sectors():sector(),longLat(),displayAll(true),displaySectorIndex(0)$/;"	f	class:Sectors
Sectors	Sectors.h	/^class Sectors$/;"	c
Sectors_H	Sectors.h	20;"	d
SubSector	Sectors.h	/^struct SubSector$/;"	s
TARGET	makefile	/^TARGET := $(shell basename `dirname \\`pwd\\``)$/;"	m
TESTTARGET	makefile	/^TESTTARGET := unittest$/;"	m
TestCountCrossing	TestCountCrossing.h	/^class TestCountCrossing$/;"	c
TimeManager	TimeManager.h	/^class TimeManager$/;"	c
TimeManager_H_	TimeManager.h	19;"	d
TrackDataManager	TrackDataManager.h	/^class TrackDataManager$/;"	c
TrackDataManager_H_	TrackDataManager.h	19;"	d
UTIL_H_	Util.h	19;"	d
Util	Util.h	/^class Util$/;"	c
_display	ATFViewerMain.h	/^	static void _display(void)$/;"	f	class:ATFViewerMain
_idle	ATFViewerMain.h	/^	static void _idle(void)$/;"	f	class:ATFViewerMain
_joystickTimer	ATFViewerMain.h	/^	static void _joystickTimer(int value)$/;"	f	class:ATFViewerMain
_keyboard	ATFViewerMain.h	/^	static void _keyboard(unsigned char key, int x, int y)$/;"	f	class:ATFViewerMain
_resize	ATFViewerMain.h	/^	static void _resize(int w, int h)$/;"	f	class:ATFViewerMain
addTrackData	unittest.cpp	/^void addTrackData(vector<id_time>& r, DBAccessor& dba)$/;"	f
altitude	Path.h	/^	int altitude;$/;"	m	struct:PathPoint
arrival	Path.h	/^	std::string arrival;$/;"	m	struct:PathPoint
begin	DBAccessor.h	/^	void begin()$/;"	f	class:DBAccessor
bindDouble	DBAccessor.h	/^	void bindDouble(int i, double d)$/;"	f	class:DBAccessor
bindInt	DBAccessor.h	/^	void bindInt(int i, int d)$/;"	f	class:DBAccessor
bindLongLong	DBAccessor.h	/^	void bindLongLong(int i, long long d)$/;"	f	class:DBAccessor
bindString	DBAccessor.h	/^	void bindString(int i, const std::string& s)$/;"	f	class:DBAccessor
camera_phi	ATFViewerMain.h	/^	GLdouble camera_phi;$/;"	m	class:ATFViewerMain
camera_r	ATFViewerMain.h	/^	GLdouble camera_r;$/;"	m	class:ATFViewerMain
camera_target	ATFViewerMain.h	/^	GLdouble camera_target[3];$/;"	m	class:ATFViewerMain
camera_theta	ATFViewerMain.h	/^	GLdouble camera_theta;$/;"	m	class:ATFViewerMain
caption	Sectors.h	/^	std::string caption;$/;"	m	struct:Sector
centerOffsetLat	MapTransform.h	/^	double centerOffsetLat;$/;"	m	class:MapTransform
centerOffsetLong	MapTransform.h	/^	double centerOffsetLong;$/;"	m	class:MapTransform
commit	DBAccessor.h	/^	void commit()$/;"	f	class:DBAccessor
comp_path	unittest.cpp	/^bool comp_path(const Path& p0, const Path& p1)$/;"	f
comp_path_time	unittest.cpp	/^bool comp_path_time(const Path& p0, const Path& p1)$/;"	f
countCrossing	CountCrossing_cuda.h	/^void countCrossing$/;"	f
countCrossing	cudatestfunc.h	/^void countCrossing$/;"	f
countCrossingByDirection	CountCrossing_cuda.h	/^void countCrossingByDirection$/;"	f
countCrossingByDirection	cudatestfunc.h	/^void countCrossingByDirection$/;"	f
countCrossingSequence	cudatestfunc.h	/^void countCrossingSequence$/;"	f
countCrossingSequenceHostImple	CountCrossing_cuda.h	/^void countCrossingSequenceHostImple$/;"	f
countCrossingTemp	CountCrossing_cuda.h	/^struct countCrossingTemp$/;"	s
countCrossingTemp	CountCrossing_cuda.h	/^struct countCrossingTemp<D, 1>$/;"	s
countCrossingTemp	cudatestfunc.h	/^struct countCrossingTemp$/;"	s
countCrossingTemp	cudatestfunc.h	/^struct countCrossingTemp<D, 1>$/;"	s
countCrossingTest_04D2Seqence	unittest.cpp	/^void countCrossingTest_04D2Seqence()$/;"	f
countCrossingTest_05Class	unittest.cpp	/^void countCrossingTest_05Class()$/;"	f
counter	CountCrossing.h	/^	std::vector<float> counter;$/;"	m	class:CountCrossing
cudatestfunc_H_	cudatestfunc.h	20;"	d
cudatestfunctest	unittest.cpp	/^void cudatestfunctest()$/;"	f
currentTimeInterval	ATFViewerMain.h	/^	int currentTimeInterval;$/;"	m	class:ATFViewerMain
db	DBAccessor.h	/^	sqlite3 *db;$/;"	m	class:DBAccessor
dbFileName	DBAccessor.h	/^	std::string dbFileName;$/;"	m	class:DBAccessor
disp_X	ATFViewerMain.h	/^	int disp_X;$/;"	m	class:ATFViewerMain
disp_Y	ATFViewerMain.h	/^	int disp_Y;$/;"	m	class:ATFViewerMain
disp_Z	ATFViewerMain.h	/^	int disp_Z;$/;"	m	class:ATFViewerMain
disp_buttonMask	ATFViewerMain.h	/^	unsigned int disp_buttonMask;$/;"	m	class:ATFViewerMain
display	ATFViewerMain.cpp	/^void ATFViewerMain::display(void)$/;"	f	class:ATFViewerMain
display	Fixes.h	/^	void display()$/;"	f	class:Fixes
display	Map.cpp	/^void Map::display(void)$/;"	f	class:Map
display	Paths.cpp	/^void Paths::display(time_t now)$/;"	f	class:Paths
display	Sectors.cpp	/^void Sectors::display(void)$/;"	f	class:Sectors
displayAll	Sectors.h	/^	bool displayAll;$/;"	m	class:Sectors
displaySector	Sectors.cpp	/^void Sectors::displaySector(Sector& sector)$/;"	f	class:Sectors
displaySectorIndex	Sectors.h	/^	unsigned int displaySectorIndex;$/;"	m	class:Sectors
displaySubSector	Sectors.cpp	/^void Sectors::displaySubSector(const std::string& sector_name, SubSector& ss)$/;"	f	class:Sectors
drawPath	Paths.cpp	/^void Paths::drawPath(PathPoint& p, time_t now)$/;"	f	class:Paths
drawString	BitmapString.h	/^	static void drawString(const char* str, void* font = GLUT_BITMAP_TIMES_ROMAN_10)$/;"	f	class:BitmapString
drawString	BitmapString.h	/^	static void drawString(double x, double y, const char* str, void* font = GLUT_BITMAP_TIMES_ROMAN_10)$/;"	f	class:BitmapString
drawString	BitmapString.h	/^	static void drawString(double x, double y, double z, const char* str, void* font = GLUT_BITMAP_TIMES_ROMAN_10)$/;"	f	class:BitmapString
drawTimeWidth	Paths.h	/^	const unsigned int drawTimeWidth;$/;"	m	class:Paths
execMainLoop	ATFViewerMain.h	/^	void execMainLoop(void)$/;"	f	class:ATFViewerMain
execQuery	DBAccessor.h	/^	std::string execQuery(const std::string& query)$/;"	f	class:DBAccessor
fixes	ATFViewerMain.h	/^	Fixes fixes;$/;"	m	class:ATFViewerMain
getAllTrackData	unittest.cpp	/^void getAllTrackData(void)$/;"	f
getAllTrackDataReserve	unittest.cpp	/^void getAllTrackDataReserve(void)$/;"	f
getAxisState	Joystick.h	/^	int getAxisState(int i)$/;"	f	class:Joystick
getButtonState	Joystick.h	/^	bool getButtonState(int i)$/;"	f	class:Joystick
getCenterOffsetLat	MapTransform.h	/^	GLdouble getCenterOffsetLat(void)$/;"	f	class:MapTransform
getCenterOffsetLong	MapTransform.h	/^	GLdouble getCenterOffsetLong(void)$/;"	f	class:MapTransform
getColumnDouble	DBAccessor.h	/^	double getColumnDouble(int i)$/;"	f	class:DBAccessor
getColumnInt	DBAccessor.h	/^	int getColumnInt(int i)$/;"	f	class:DBAccessor
getColumnLongLong	DBAccessor.h	/^	long long getColumnLongLong(int i)$/;"	f	class:DBAccessor
getColumnString	DBAccessor.h	/^	std::string getColumnString(int i)$/;"	f	class:DBAccessor
getCounter	CountCrossing.h	/^	const std::vector<float>& getCounter()$/;"	f	class:CountCrossing
getCounterValue	CountCrossing.h	/^	float getCounterValue(int d, int s, int cx, int cy, int cz, int ct)$/;"	f	class:CountCrossing
getCrossingPoint	CountCrossing_cuda.h	/^float*  getCrossingPoint$/;"	f
getCrossingPoint	cudatestfunc.h	/^float*  getCrossingPoint$/;"	f
getFeetFromFL	Util.h	/^	static int getFeetFromFL(std::string fl)$/;"	f	class:Util
getIndexCount	CountCrossing.h	/^	int getIndexCount(int i)$/;"	f	class:CountCrossing
getInsideLongLat	Sectors.cpp	/^LongLat Sectors::getInsideLongLat(LongLat& xi, LongLat& xj, LongLat& xk, double distance)$/;"	f	class:Sectors
getInstance	ATFViewerMain.h	/^	inline static ATFViewerMain& getInstance()$/;"	f	class:ATFViewerMain
getLatitudeFromDMS	Util.h	/^	static double getLatitudeFromDMS(std::string lat_dms)$/;"	f	class:Util
getLongitudeFromDMS	Util.h	/^	static double getLongitudeFromDMS(std::string long_dms)$/;"	f	class:Util
getNowPoint	Paths.cpp	/^PathPoint Paths::getNowPoint(PathPoint& from, PathPoint& to, time_t time)$/;"	f	class:Paths
getScale	MapTransform.h	/^	GLdouble getScale(void)$/;"	f	class:MapTransform
getSectors	Sectors.cpp	/^void Sectors::getSectors(DBAccessor& dba)$/;"	f	class:Sectors
getSettings	Map.cpp	/^void Map::getSettings(DBAccessor& dba,std::string& map_id, std::string& texture_file_name)$/;"	f	class:Map
getSubSectorVertex	Sectors.cpp	/^void Sectors::getSubSectorVertex(DBAccessor& dba, Sector& s, int subsector_index)$/;"	f	class:Sectors
getSubSectors	Sectors.cpp	/^void Sectors::getSubSectors(DBAccessor& dba, Sector& s)$/;"	f	class:Sectors
getTotalCellIndex	CountCrossing_cuda.h	/^int getTotalCellIndex$/;"	f
getTotalCellIndex	cudatestfunc.h	/^int getTotalCellIndex$/;"	f
getTrackDataFromDB	TrackDataManager.h	/^	void getTrackDataFromDB(std::vector<Path>& p,$/;"	f	class:TrackDataManager
getTrackDataFromDBWithDay	TrackDataManager.h	/^	void getTrackDataFromDBWithDay(std::vector<Path>& paths,$/;"	f	class:TrackDataManager
getVertex	Map.cpp	/^void Map::getVertex(DBAccessor& dba,std::string& map_id)$/;"	f	class:Map
getVertexIndex	Map.cpp	/^void Map::getVertexIndex(DBAccessor& dba,std::string& map_id)$/;"	f	class:Map
id	Path.h	/^	std::string id;$/;"	m	struct:Path
id	unittest.cpp	/^	string id;$/;"	m	struct:id_time	file:
id_time	unittest.cpp	/^struct id_time$/;"	s	file:
idle	ATFViewerMain.h	/^	void idle(void)$/;"	f	class:ATFViewerMain
imple	CountCrossing_cuda.h	/^	static void imple$/;"	f	struct:countCrossingTemp
imple	cudatestfunc.h	/^	static void imple$/;"	f	struct:countCrossingTemp
includesMaximumAltitude	Sectors.h	/^	bool includesMaximumAltitude;$/;"	m	struct:SubSector
includesMinimumAltitude	Sectors.h	/^	bool includesMinimumAltitude;$/;"	m	struct:SubSector
indexCount	CountCrossing.h	/^	std::vector<int> indexCount;$/;"	m	class:CountCrossing
init	ATFViewerMain.h	/^	void init(void)$/;"	f	class:ATFViewerMain
init	Fixes.cpp	/^void Fixes::init(DBAccessor& dba)$/;"	f	class:Fixes
init	Map.cpp	/^void Map::init(DBAccessor& dba)$/;"	f	class:Map
init	Sectors.h	/^	void init(DBAccessor& dba)$/;"	f	class:Sectors
initPathPoint	Paths.cpp	/^void Paths::initPathPoint(DBAccessor& dba, time_t time_min, time_t time_max)$/;"	f	class:Paths
initScene	ATFViewerMain.cpp	/^void ATFViewerMain::initScene(void)$/;"	f	class:ATFViewerMain
initTexture	Map.cpp	/^void Map::initTexture(std::string& texture_file_name)$/;"	f	class:Map
insideLongLatIndex	Sectors.h	/^	std::vector<int> insideLongLatIndex;$/;"	m	struct:SubSector
interval	CountCrossing.h	/^	std::vector<float> interval;$/;"	m	class:CountCrossing
isClockwise	GCS.cpp	/^bool isClockwise(std::vector<int>& longLatIndex, std::vector<LongLat>& longLat)$/;"	f
isEnable	Joystick.h	/^	bool isEnable()$/;"	f	class:Joystick
joystick	ATFViewerMain.h	/^	Joystick joystick;$/;"	m	class:ATFViewerMain
joystickTimer	ATFViewerMain.cpp	/^void ATFViewerMain::joystickTimer(int value)$/;"	f	class:ATFViewerMain
joystickTimerId	ATFViewerMain.h	/^	const int joystickTimerId;$/;"	m	class:ATFViewerMain
keyboard	ATFViewerMain.cpp	/^void ATFViewerMain::keyboard(unsigned char key, int x, int y)$/;"	f	class:ATFViewerMain
latitude	Fixes.h	/^	std::vector<double> latitude;$/;"	m	class:Fixes
latitude	GCS.h	/^	double latitude;$/;"	m	struct:LongLat
latitude	Map.h	/^	double latitude;$/;"	m	struct:MapVertex
latitude	Path.h	/^	double latitude;$/;"	m	struct:PathPoint
longLat	Sectors.h	/^	std::vector<LongLat> longLat;$/;"	m	class:Sectors
longLatIndex	Sectors.h	/^	std::vector<int> longLatIndex;$/;"	m	struct:SubSector
longitude	Fixes.h	/^	std::vector<double> longitude;$/;"	m	class:Fixes
longitude	GCS.h	/^	double longitude;$/;"	m	struct:LongLat
longitude	Map.h	/^	double longitude;$/;"	m	struct:MapVertex
longitude	Path.h	/^	double longitude;$/;"	m	struct:PathPoint
main	ATFViewer.cpp	/^int main(int argc, char const* argv[])$/;"	f
main	unittest.cpp	/^int main(int argc, char const* argv[])$/;"	f
map	ATFViewerMain.h	/^	std::vector<Map> map;$/;"	m	class:ATFViewerMain
mapId	Map.h	/^	std::string mapId;$/;"	m	class:Map
mapTransform	ATFViewerMain.h	/^	MapTransform mapTransform;$/;"	m	class:ATFViewerMain
mapVertex	Map.h	/^	std::vector<MapVertex> mapVertex;$/;"	m	class:Map
mapVertexIndex	Map.h	/^	std::vector<std::vector<MapVertexIndex> > mapVertexIndex;$/;"	m	class:Map
maximumAltitude	Sectors.h	/^	int maximumAltitude;$/;"	m	struct:SubSector
minimumAltitude	Sectors.h	/^	int minimumAltitude;$/;"	m	struct:SubSector
name	Fixes.h	/^	std::vector<std::string> name;$/;"	m	class:Fixes
nextDayTime	TimeManager.h	/^	static time_t nextDayTime(time_t t)$/;"	f	class:TimeManager
now	ATFViewerMain.h	/^	time_t now;$/;"	m	class:ATFViewerMain
now_index	Path.h	/^	int now_index;$/;"	m	struct:Path
nowstring	unittest.cpp	/^string nowstring()$/;"	f
operator !=	Path.h	/^	bool operator!=(const std::string& s)$/;"	f	struct:Path
operator ==	Path.h	/^	bool operator==(const std::string& s)$/;"	f	struct:Path
past_time_index	Path.h	/^	int past_time_index;$/;"	m	struct:Path
pathPoint	Path.h	/^	std::vector<PathPoint> pathPoint;$/;"	m	struct:Path
paths	ATFViewerMain.h	/^	Paths paths;$/;"	m	class:ATFViewerMain
paths	Paths.h	/^	std::vector<Path> paths;$/;"	m	class:Paths
pollingInterval	ATFViewerMain.h	/^	const unsigned int pollingInterval;$/;"	m	class:ATFViewerMain
readJoystickEvent	Joystick.h	/^	void readJoystickEvent()$/;"	f	class:Joystick
resetStmt	DBAccessor.h	/^	void resetStmt()$/;"	f	class:DBAccessor
resetTime	Paths.cpp	/^void Paths::resetTime(void)$/;"	f	class:Paths
resize	ATFViewerMain.cpp	/^void ATFViewerMain::resize(int w, int h)$/;"	f	class:ATFViewerMain
scale	MapTransform.h	/^	double scale;$/;"	m	class:MapTransform
sector	Sectors.h	/^	std::vector<Sector> sector;$/;"	m	class:Sectors
sectorName	Sectors.h	/^	std::string sectorName;$/;"	m	struct:Sector
sectors	ATFViewerMain.h	/^	Sectors sectors;$/;"	m	class:ATFViewerMain
selectTrackDataWithDate	unittest.cpp	/^void selectTrackDataWithDate()$/;"	f
selectTrackDataWithTime	unittest.cpp	/^void selectTrackDataWithTime()$/;"	f
setCenterOffsetLat	MapTransform.h	/^	void setCenterOffsetLat(GLdouble c_lat)$/;"	f	class:MapTransform
setCenterOffsetLong	MapTransform.h	/^	void setCenterOffsetLong(GLdouble c_long)$/;"	f	class:MapTransform
setQuery	DBAccessor.h	/^	void setQuery(const std::string& sql)$/;"	f	class:DBAccessor
setScale	MapTransform.h	/^	void setScale(GLdouble s)$/;"	f	class:MapTransform
setTransform	MapTransform.h	/^	void setTransform()$/;"	f	class:MapTransform
startIndex	CountCrossing.h	/^	std::vector<int> startIndex;$/;"	m	class:CountCrossing
step	DBAccessor.h	/^	void step()$/;"	f	class:DBAccessor
step_select	DBAccessor.h	/^	int step_select()$/;"	f	class:DBAccessor
stmt	DBAccessor.h	/^	sqlite3_stmt* stmt;$/;"	m	class:DBAccessor
subSector	Sectors.h	/^	std::vector<SubSector> subSector;$/;"	m	struct:Sector
subSectorCount	Sectors.h	/^	int subSectorCount;$/;"	m	struct:Sector
switchDisplaySector	Sectors.h	/^	void switchDisplaySector()$/;"	f	class:Sectors
testTrackDataManager	unittest.cpp	/^void testTrackDataManager()$/;"	f
textureHeight	Map.h	/^	int textureHeight;$/;"	m	class:Map
textureName	Map.h	/^	GLuint textureName[1];$/;"	m	class:Map
textureWidth	Map.h	/^	int textureWidth;$/;"	m	class:Map
time	Path.h	/^	time_t time;$/;"	m	struct:PathPoint
time	unittest.cpp	/^	long long time;$/;"	m	struct:id_time	file:
timeInterval	ATFViewerMain.h	/^	const int timeInterval;$/;"	m	class:ATFViewerMain
timeMax	ATFViewerMain.h	/^	const time_t timeMax;$/;"	m	class:ATFViewerMain
timeMin	ATFViewerMain.h	/^	const time_t timeMin;$/;"	m	class:ATFViewerMain
today	TimeManager.h	/^	static time_t today(time_t t)$/;"	f	class:TimeManager
u	Map.h	/^	double u;$/;"	m	struct:MapVertex
unitProvidingService	Sectors.h	/^	std::string unitProvidingService;$/;"	m	struct:Sector
v	Map.h	/^	double v;$/;"	m	struct:MapVertex
vertex	CountCrossing.h	/^	std::vector<float> vertex;$/;"	m	class:CountCrossing
vertexIndex	Map.h	/^	int vertexIndex;$/;"	m	struct:MapVertexIndex
windowHeight	ATFViewerMain.h	/^	int windowHeight;$/;"	m	class:ATFViewerMain
windowWidth	ATFViewerMain.h	/^	int windowWidth;$/;"	m	class:ATFViewerMain
~DBAccessor	DBAccessor.h	/^	~DBAccessor()$/;"	f	class:DBAccessor
